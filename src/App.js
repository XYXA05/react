// App.js
import React, { useState, useEffect } from 'react'; // –î–æ–¥–∞–Ω–æ useEffect
import axios from 'axios';
import './App.css';
import './CalendarView.css'; // CSS for calendar styling
import ChannelControl from './ChannelControl'; // Channel control component
import MainPage from './MainPage'; // Apartments list & filters
import RentalCalendar from './RentalCalendar'; // Calendar view component
import OrdersList from './OrdersList'; // Orders view (separate component)
import ClientsList from './ClientsList'; // Clients view (separate component)
import CreateUser from './CreateUser';
import ActionLogsMonitoring from './ActionLogsMonitoring';
const API_URL = 'http://localhost:8000'; // Adjust to your backend URL

function App() {
  // Authentication token and view control state
  const [token, setToken] = useState(localStorage.getItem('token') || '');
  // Valid views: 'login', 'dashboard', 'apartments', 'orders', 'clients', 'statistics',
  // 'documents', 'settings', 'schedule', 'rentalCalendar', 'reviewsAndDeals', 'call', 'channelControl'
  const [view, setView] = useState(token ? 'dashboard' : 'login');
  const [error, setError] = useState('');

  // --- LOGIN HANDLER ---
  const handleLogin = async (e) => {
    e.preventDefault();
    const username = e.target.username.value;
    const password = e.target.password.value;
    try {
      const response = await axios.post(
        `${API_URL}/login`,
        new URLSearchParams({ username, password }),
        { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }
      );
      const newToken = response.data.access_token;
      setToken(newToken);
      localStorage.setItem('token', newToken);
      setView('dashboard');
      setError('');
    } catch (err) {
      console.error(err);
      setError('Login failed. Please check your credentials.');
    }
  };

  // --- –û–±—Ä–æ–±–Ω–∏–∫ –≤–∏—Ö–æ–¥—É ---
  const logout = () => {
    setToken('');
    localStorage.removeItem('token');
    setView('login');
  };

  // –Ø–∫—â–æ –Ω–µ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω—ñ, –ø–æ–∫–∞–∑—É—î–º–æ —Ñ–æ—Ä–º—É –ª–æ–≥—ñ–Ω—É
  if (view === 'login') {
    return (
      <div style={{ padding: '20px' }}>
        <h2>Login</h2>
        {error && <p style={{ color: 'red' }}>{error}</p>}
        <form onSubmit={handleLogin}>
          <div>
            <input name="username" type="text" placeholder="Username" required />
          </div>
          <div>
            <input name="password" type="password" placeholder="Password" required />
          </div>
          <button type="submit">Login</button>
        </form>
      </div>
    );
  }

  return (
    <div style={{ padding: '20px' }}>
      <h2>Dashboard</h2>
      <Navigation setView={setView} logout={logout} />
      {view === 'dashboard' && <Dashboard />}
      {view === 'store' && <StoreAdmin token={token} />}
      {view === 'design' && <DesignAdmin token={token} />}
      {view === 'renovation' && <RenovationAdmin token={token} />}
      {view === 'cleaning' && <CleaningAdmin token={token} />}
      {view === 'apartments' && <MainPage />}
      {view === 'orders' && (
        <OrdersList token={token} onBack={() => setView('dashboard')} />
      )}
      {view === 'clients' && (
        <ClientsList token={token} onBack={() => setView('dashboard')} />
      )}
      {view === 'statistics' && <StatisticsDisplay />}
      {view === 'documents' && <Documents />}
      {view === 'settings' && <Settings />}
      {view === 'schedule' && <Schedule />}
      {view === 'rentalCalendar' && (
        <RentalCalendar propertyId={1} onBack={() => setView('apartments')} />
      )}
      {view === 'reviewsAndDeals' && <ReviewsAndDeals />}
      {view === 'call' && <Call />}
      {view === 'channelControl' && <ChannelControl />}
      {view === 'create_user' && <CreateUser />}
      {view === 'logs' && <ActionLogsMonitoring/>}      
    </div>
  );
}

// --- –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –º—ñ–∂ –º–æ–¥—É–ª—è–º–∏ ---
const Navigation = ({ setView, logout }) => (
  <nav style={{ marginBottom: '20px' }}>
    <button onClick={() => setView('dashboard')}>Dashboard</button>{' '}
    <button onClick={() => setView('store')}>–Ü–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω üõç</button>{' '}
    <button onClick={() => setView('design')}>–î–∏–∑–∞–π–Ω üé®</button>{' '}
    <button onClick={() => setView('renovation')}>–†–µ–º–æ–Ω—Ç/–ë—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ üèó</button>{' '}
    <button onClick={() => setView('cleaning')}>–ö–ª—ñ–Ω—ñ–Ω–≥ üßπ</button>{' '}
    <button onClick={() => setView('documents')}>Documents</button>{' '}
    <button onClick={() => setView('settings')}>Settings</button>{' '}
    <button onClick={() => setView('schedule')}>Schedule</button>{' '}
    <button onClick={() => setView('rentalCalendar')}>Rental Calendar</button>{' '}
    <button onClick={() => setView('reviewsAndDeals')}>Reviews & Deals</button>{' '}
    <button onClick={() => setView('call')}>Call</button>{' '}
    <button onClick={() => setView('channelControl')}>Channel Control</button>{' '}
    <button onClick={() => setView('apartments')}>Apartments</button>{' '}
    <button onClick={() => setView('orders')}>Orders</button>{' '}
    <button onClick={() => setView('clients')}>Clients</button>{' '}
    <button onClick={() => setView('statistics')}>Statistics</button>{' '}
    <button onClick={() => setView('create_user')}>Create User</button>{' '}
    <button onClick={() => setView('logs')}>Log Users</button>{' '}    
    <button onClick={logout}>Logout</button>
    <hr />
  </nav>
);

// --- –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Dashboard ---
const Dashboard = () => (
  <div>
    <h3>Welcome!</h3>
    <p>–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª —ñ–∑ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó.</p>
  </div>
);

// ============================
// –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω
// ============================
const StoreAdmin = ({ token }) => {
  // –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏: apartments, orders, callbacks, requests, statistics, calendar, clients
  const [subView, setSubView] = useState('apartments');
  return (
    <div>
      <h2>–Ü–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω üõç</h2>
      <StoreNavigation setSubView={setSubView} />
      {subView === 'apartments' && <StoreApartments token={token} />}
      {subView === 'orders' && <StoreOrders token={token} />}
      {subView === 'callbacks' && <StoreCallbacks token={token} />}
      {subView === 'requests' && <StoreRequests token={token} />}
      {subView === 'statistics' && <StoreStatistics token={token} />}
      {subView === 'calendar' && <StoreCalendar token={token} />}
      {subView === 'clients' && <StoreClients token={token} />}
    </div>
  );
};

const StoreNavigation = ({ setSubView }) => (
  <div>
    <button onClick={() => setSubView('apartments')}>–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∏</button>
    <button onClick={() => setSubView('orders')}>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è</button>
    <button onClick={() => setSubView('callbacks')}>–ü—Ä–æ–¥–∑–≤—ñ–Ω</button>
    <button onClick={() => setSubView('requests')}>–ó–∞–ø–∏—Ç–∏</button>
    <button onClick={() => setSubView('statistics')}>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</button>
    <button onClick={() => setSubView('calendar')}>–ì—Ä–∞—Ñ—ñ–∫</button>
    <button onClick={() => setSubView('clients')}>–ö–ª—ñ—î–Ω—Ç–∏</button>
  </div>
);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ñ–≤
const StoreApartments = ({ token }) => {
  const [apartments, setApartments] = useState([]);
  const [loading, setLoading] = useState(true);
  useEffect(() => {
    axios
      .get(`${API_URL}/store/apartments/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setApartments(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error(err);
        setLoading(false);
      });
  }, [token]);
  return (
    <div>
      <h3>–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∏</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
      ) : apartments.length ? (
        <ul>
          {apartments.map((apt) => (
            <li key={apt.id}>
              {apt.title} - {apt.price} - {apt.location}
            </li>
          ))}
        </ul>
      ) : (
        <p>–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>
      )}
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω—å
const StoreOrders = ({ token }) => {
  const [orders, setOrders] = useState([]);
  const [loading, setLoading] = useState(true);
  useEffect(() => {
    axios
      .get(`${API_URL}/store/orders/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setOrders(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error(err);
        setLoading(false);
      });
  }, [token]);
  return (
    <div>
      <h3>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
      ) : orders.length ? (
        <ul>
          {orders.map((ord) => (
            <li key={ord.id}>
              {ord.name} - {ord.status}
            </li>
          ))}
        </ul>
      ) : (
        <p>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>
      )}
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–¥–∑–≤–æ–Ω—É
const StoreCallbacks = ({ token }) => {
  const [phone, setPhone] = useState('');
  const [message, setMessage] = useState('');
  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await axios.post(
        `${API_URL}/store/callbacks/`,
        { phone },
        { headers: { Authorization: `Bearer ${token}` } }
      );
      setMessage(`–ó–∞–ø–∏—Ç –Ω–∞ –ø—Ä–æ–¥–∑–≤—ñ–Ω –¥–ª—è –Ω–æ–º–µ—Ä–∞ ${phone} –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!`);
    } catch (err) {
      console.error(err);
      setMessage('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—É.');
    }
  };
  return (
    <div>
      <h3>–ü—Ä–æ–¥–∑–≤—ñ–Ω</h3>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É"
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
          required
        />
        <button type="submit">–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏</button>
      </form>
      {message && <p>{message}</p>}
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤
const StoreRequests = ({ token }) => {
  const [requests, setRequests] = useState([]);
  const [loading, setLoading] = useState(true);
  useEffect(() => {
    axios
      .get(`${API_URL}/store/requests/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setRequests(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error(err);
        setLoading(false);
      });
  }, [token]);
  return (
    <div>
      <h3>–ó–∞–ø–∏—Ç–∏</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
      ) : requests.length ? (
        <ul>
          {requests.map((req) => (
            <li key={req.id}>
              ID {req.id}: {req.message}
            </li>
          ))}
        </ul>
      ) : (
        <p>–ó–∞–ø–∏—Ç–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ.</p>
      )}
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
const StoreStatistics = ({ token }) => {
  const [stats, setStats] = useState(null);
  const [loading, setLoading] = useState(true);
  useEffect(() => {
    axios
      .get(`${API_URL}/store/statistics/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setStats(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error(err);
        setLoading(false);
      });
  }, [token]);
  return (
    <div>
      <h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
      ) : stats ? (
        <div>
          <p>–ü—Ä–∏–±—É—Ç–æ–∫: {stats.profit}</p>
          <p>–ó–∞–º–æ–≤–ª–µ–Ω—å: {stats.orders_count}</p>
          <p>–Ü–Ω—à–µ: {stats.others}</p>
        </div>
      ) : (
        <p>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞.</p>
      )}
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
const StoreCalendar = ({ token }) => {
  const [calendar, setCalendar] = useState(null);
  const [apartmentId, setApartmentId] = useState('');
  const [year, setYear] = useState('');
  const [month, setMonth] = useState('');
  const [loading, setLoading] = useState(false);
  const fetchCalendar = async () => {
    setLoading(true);
    try {
      const res = await axios.get(`${API_URL}/store/calendar/${apartmentId}/${year}/${month}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setCalendar(res.data);
    } catch (err) {
      console.error(err);
      setCalendar(null);
    }
    setLoading(false);
  };
  return (
    <div>
      <h3>–ì—Ä–∞—Ñ—ñ–∫</h3>
      <div>
        <input
          type="number"
          placeholder="ID –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—É"
          value={apartmentId}
          onChange={(e) => setApartmentId(e.target.value)}
        />
        <input
          type="number"
          placeholder="–†—ñ–∫"
          value={year}
          onChange={(e) => setYear(e.target.value)}
        />
        <input
          type="number"
          placeholder="–ú—ñ—Å—è—Ü—å"
          value={month}
          onChange={(e) => setMonth(e.target.value)}
        />
        <button onClick={fetchCalendar}>–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä</button>
      </div>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è...</p>
      ) : calendar ? (
        <pre>{JSON.stringify(calendar, null, 2)}</pre>
      ) : (
        <p>–ö–∞–ª–µ–Ω–¥–∞—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.</p>
      )}
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∫–ª—ñ—î–Ω—Ç—ñ–≤
const StoreClients = ({ token }) => {
  const [clients, setClients] = useState([]);
  const [loading, setLoading] = useState(true);
  useEffect(() => {
    axios
      .get(`${API_URL}/store/clients/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setClients(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error(err);
        setLoading(false);
      });
  }, [token]);
  return (
    <div>
      <h3>–ö–ª—ñ—î–Ω—Ç–∏</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
      ) : clients.length ? (
        <ul>
          {clients.map((client) => (
            <li key={client.id}>
              {client.name} - {client.phone}
            </li>
          ))}
        </ul>
      ) : (
        <p>–ö–ª—ñ—î–Ω—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>
      )}
    </div>
  );
};

const DesignAdmin = ({ token }) => {
  const [subView, setSubView] = useState('projects');

  return (
    <div>
      <h2>–î–∏–∑–∞–π–Ω üé®</h2>
      <DesignNavigation setSubView={setSubView} />
      {subView === 'projects' && <DesignProjects token={token} />}
      {subView === 'callbacks' && <DesignCallbacks token={token} />}
      {subView === 'requests' && <DesignRequests token={token} />}
      {subView === 'statistics' && <DesignStatistics token={token} />}
      {subView === 'calendar' && <DesignCalendar token={token} />}
      {subView === 'clients' && <DesignClients token={token} />}
    </div>
  );
};

const DesignNavigation = ({ setSubView }) => (
  <div>
    <button onClick={() => setSubView('projects')}>–ü—Ä–æ—î–∫—Ç–∏</button>
    <button onClick={() => setSubView('callbacks')}>–ü—Ä–æ–¥–∑–≤—ñ–Ω</button>
    <button onClick={() => setSubView('requests')}>–ó–∞–ø–∏—Ç–∏</button>
    <button onClick={() => setSubView('statistics')}>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</button>
    <button onClick={() => setSubView('calendar')}>–ì—Ä–∞—Ñ—ñ–∫</button>
    <button onClick={() => setSubView('clients')}>–ö–ª—ñ—î–Ω—Ç–∏</button>
  </div>
);

const DesignProjects = ({ token }) => {
  const [projects, setProjects] = useState([]);
  const [loading, setLoading] = useState(true);

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—î–∫—Ç—ñ–≤ –∑ –±–µ–∫–µ–Ω–¥—É
  useEffect(() => {
    axios
      .get(`${API_URL}/design/projects/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setProjects(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—î–∫—Ç—ñ–≤:", err);
        setLoading(false);
      });
  }, [token]);

  const viewProjects = () => {
    alert("–°–ø–∏—Å–æ–∫ –ø—Ä–æ—î–∫—Ç—ñ–≤:\n" + JSON.stringify(projects, null, 2));
  };

  const editProject = () => {
    // –õ–æ–≥—ñ–∫–∞ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—î–∫—Ç—É (–≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ñ–æ—Ä–º–∏)
    alert("–í—ñ–¥–∫—Ä–∏—Ç—Ç—è –¥—ñ–∞–ª–æ–≥—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—î–∫—Ç—É (—Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –Ω–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ)");
  };

  const addPhoto = () => {
    alert("–í—ñ–¥–∫—Ä–∏—Ç—Ç—è –ø—Ä–æ—Ü–µ—Å—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ (—Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –Ω–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ)");
  };

  return (
    <div>
      <h3>–ü—Ä–æ—î–∫—Ç–∏</h3>
      <div style={{ marginBottom: '10px' }}>
        <button onClick={viewProjects}>üìù –ü–µ—Ä–µ–≥–ª—è–¥ —Å–ø–∏—Å–∫—É</button>{' '}
        <button onClick={editProject}>‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏</button>{' '}
        <button onClick={addPhoto}>üì∏ –î–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ</button>
      </div>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—î–∫—Ç—ñ–≤...</p>
      ) : projects.length ? (
        <ul>
          {projects.map((proj) => (
            <li key={proj.id}>
              ID {proj.id}: {proj.design_type} ‚Äî {proj.style} (–ë—é–¥–∂–µ—Ç: {proj.budget})
            </li>
          ))}
        </ul>
      ) : (
        <p>–ü—Ä–æ—î–∫—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>
      )}
    </div>
  );
};

const DesignCallbacks = ({ token }) => {
  const [phone, setPhone] = useState('');
  const [message, setMessage] = useState('');
  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await axios.post(
        `${API_URL}/design/callbacks/`,
        { phone },
        { headers: { Authorization: `Bearer ${token}` } }
      );
      setMessage(`–ó–∞–ø–∏—Ç –Ω–∞ –ø—Ä–æ–¥–∑–≤—ñ–Ω –¥–ª—è –Ω–æ–º–µ—Ä–∞ ${phone} –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!`);
    } catch (err) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–æ–¥–∑–≤–æ–Ω—É:", err);
      setMessage('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—É.');
    }
  };
  return (
    <div>
      <h3>–ü—Ä–æ–¥–∑–≤—ñ–Ω</h3>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É"
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
          required
        />
        <button type="submit">–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏</button>
      </form>
      {message && <p>{message}</p>}
    </div>
  );
};

const DesignRequests = ({ token }) => {
  const [requests, setRequests] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    axios
      .get(`${API_URL}/design/requests/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setRequests(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤:", err);
        setLoading(false);
      });
  }, [token]);

  return (
    <div>
      <h3>–ó–∞–ø–∏—Ç–∏</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤...</p>
      ) : requests.length ? (
        <ul>
          {requests.map((req) => (
            <li key={req.id}>
              ID {req.id}: {req.message}
            </li>
          ))}
        </ul>
      ) : (
        <p>–ó–∞–ø–∏—Ç–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ.</p>
      )}
    </div>
  );
};

const DesignStatistics = ({ token }) => {
  const [stats, setStats] = useState(null);
  const [loading, setLoading] = useState(true);
  useEffect(() => {
    axios
      .get(`${API_URL}/design/statistics/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setStats(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", err);
        setLoading(false);
      });
  }, [token]);
  return (
    <div>
      <h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</p>
      ) : stats ? (
        <div>
          <p>–ü—Ä–∏–±—É—Ç–æ–∫: {stats.profit}</p>
          <p>–ó–∞–º–æ–≤–ª–µ–Ω—å: {stats.orders_count}</p>
          <p>–Ü–Ω—à–µ: {stats.others}</p>
        </div>
      ) : (
        <p>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞.</p>
      )}
    </div>
  );
};

const DesignCalendar = ({ token }) => {
  const [calendar, setCalendar] = useState(null);
  const [projectId, setProjectId] = useState('');
  const [year, setYear] = useState('');
  const [month, setMonth] = useState('');
  const [loading, setLoading] = useState(false);

  const fetchCalendar = async () => {
    setLoading(true);
    try {
      const res = await axios.get(`${API_URL}/design/calendar/${projectId}/${year}/${month}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setCalendar(res.data);
    } catch (err) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è:", err);
      setCalendar(null);
    }
    setLoading(false);
  };

  return (
    <div>
      <h3>–ì—Ä–∞—Ñ—ñ–∫</h3>
      <div>
        <input
          type="number"
          placeholder="ID –ø—Ä–æ—î–∫—Ç—É"
          value={projectId}
          onChange={(e) => setProjectId(e.target.value)}
        />
        <input
          type="number"
          placeholder="–†—ñ–∫"
          value={year}
          onChange={(e) => setYear(e.target.value)}
        />
        <input
          type="number"
          placeholder="–ú—ñ—Å—è—Ü—å"
          value={month}
          onChange={(e) => setMonth(e.target.value)}
        />
        <button onClick={fetchCalendar}>–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä</button>
      </div>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è...</p>
      ) : calendar ? (
        <pre>{JSON.stringify(calendar, null, 2)}</pre>
      ) : (
        <p>–ö–∞–ª–µ–Ω–¥–∞—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.</p>
      )}
    </div>
  );
};

const DesignClients = ({ token }) => {
  const [clients, setClients] = useState([]);
  const [loading, setLoading] = useState(true);
  useEffect(() => {
    axios
      .get(`${API_URL}/design/clients/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setClients(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤:", err);
        setLoading(false);
      });
  }, [token]);
  return (
    <div>
      <h3>–ö–ª—ñ—î–Ω—Ç–∏</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
      ) : clients.length ? (
        <ul>
          {clients.map((client) => (
            <li key={client.id}>{client.name} - {client.phone}</li>
          ))}
        </ul>
      ) : (
        <p>–ö–ª—ñ—î–Ω—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>
      )}
    </div>
  );
};

const RenovationAdmin = ({ token }) => {
  const [subView, setSubView] = useState('projects'); // –º–æ–∂–ª–∏–≤—ñ: projects, callbacks, requests, statistics, calendar, clients
  return (
    <div>
      <h2>–†–µ–º–æ–Ω—Ç/–ë—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ üèó</h2>
      <RenovationNavigation setSubView={setSubView} />
      {subView === 'projects' && <RenovationProjects token={token} />}
      {subView === 'callbacks' && <RenovationCallbacks token={token} />}
      {subView === 'requests' && <RenovationRequests token={token} />}
      {subView === 'statistics' && <RenovationStatistics token={token} />}
      {subView === 'calendar' && <RenovationCalendar token={token} />}
      {subView === 'clients' && <RenovationClients token={token} />}
    </div>
  );
};

const RenovationNavigation = ({ setSubView }) => (
  <div>
    <button onClick={() => setSubView('projects')}>–ü—Ä–æ—î–∫—Ç–∏</button>
    <button onClick={() => setSubView('callbacks')}>–ü—Ä–æ–¥–∑–≤—ñ–Ω</button>
    <button onClick={() => setSubView('requests')}>–ó–∞–ø–∏—Ç–∏</button>
    <button onClick={() => setSubView('statistics')}>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</button>
    <button onClick={() => setSubView('calendar')}>–ì—Ä–∞—Ñ—ñ–∫</button>
    <button onClick={() => setSubView('clients')}>–ö–ª—ñ—î–Ω—Ç–∏</button>
  </div>
);

// --- –ü—Ä–æ—î–∫—Ç–∏ —Ä–µ–º–æ–Ω—Ç—É/–±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–∞ ---
const RenovationProjects = ({ token }) => {
  const [projects, setProjects] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    axios
      .get(`${API_URL}/renovation/projects/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setProjects(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error(err);
        setLoading(false);
      });
  }, [token]);

  return (
    <div>
      <h3>–ü—Ä–æ—î–∫—Ç–∏</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—î–∫—Ç—ñ–≤...</p>
      ) : projects.length ? (
        <ul>
          {projects.map((proj) => (
            <li key={proj.id}>
              ID {proj.id}: {proj.address} - {proj.work_type} - {proj.cost}
            </li>
          ))}
        </ul>
      ) : (
        <p>–ü—Ä–æ—î–∫—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>
      )}
    </div>
  );
};

// --- –ü—Ä–æ–¥–∑–≤—ñ–Ω –¥–ª—è —Ä–µ–º–æ–Ω—Ç—É/–±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–∞ ---
const RenovationCallbacks = ({ token }) => {
  const [phone, setPhone] = useState('');
  const [message, setMessage] = useState('');
  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await axios.post(
        `${API_URL}/renovation/callbacks/`,
        { phone },
        { headers: { Authorization: `Bearer ${token}` } }
      );
      setMessage(`–ó–∞–ø–∏—Ç –Ω–∞ –ø—Ä–æ–¥–∑–≤—ñ–Ω –¥–ª—è –Ω–æ–º–µ—Ä–∞ ${phone} –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!`);
    } catch (err) {
      console.error(err);
      setMessage('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—É.');
    }
  };
  return (
    <div>
      <h3>–ü—Ä–æ–¥–∑–≤—ñ–Ω</h3>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É"
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
          required
        />
        <button type="submit">–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏</button>
      </form>
      {message && <p>{message}</p>}
    </div>
  );
};

// --- –ó–∞–ø–∏—Ç–∏ –¥–ª—è —Ä–µ–º–æ–Ω—Ç—É/–±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–∞ ---
const RenovationRequests = ({ token }) => {
  const [requests, setRequests] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    axios
      .get(`${API_URL}/renovation/requests/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setRequests(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error(err);
        setLoading(false);
      });
  }, [token]);

  return (
    <div>
      <h3>–ó–∞–ø–∏—Ç–∏</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤...</p>
      ) : requests.length ? (
        <ul>
          {requests.map((req) => (
            <li key={req.id}>
              ID {req.id}: {req.message}
            </li>
          ))}
        </ul>
      ) : (
        <p>–ó–∞–ø–∏—Ç–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ.</p>
      )}
    </div>
  );
};

// --- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è —Ä–µ–º–æ–Ω—Ç—É/–±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–∞ ---
const RenovationStatistics = ({ token }) => {
  const [stats, setStats] = useState(null);
  const [loading, setLoading] = useState(true);
  useEffect(() => {
    axios
      .get(`${API_URL}/renovation/statistics/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setStats(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error(err);
        setLoading(false);
      });
  }, [token]);
  return (
    <div>
      <h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</p>
      ) : stats ? (
        <div>
          <p>–ü—Ä–∏–±—É—Ç–æ–∫: {stats.profit}</p>
          <p>–ó–∞–º–æ–≤–ª–µ–Ω—å: {stats.orders_count}</p>
          <p>–Ü–Ω—à–µ: {stats.others}</p>
        </div>
      ) : (
        <p>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞.</p>
      )}
    </div>
  );
};

// --- –ì—Ä–∞—Ñ—ñ–∫ –¥–ª—è —Ä–µ–º–æ–Ω—Ç—É/–±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–∞ ---
const RenovationCalendar = ({ token }) => {
  const [calendar, setCalendar] = useState(null);
  const [projectId, setProjectId] = useState('');
  const [year, setYear] = useState('');
  const [month, setMonth] = useState('');
  const [loading, setLoading] = useState(false);

  const fetchCalendar = async () => {
    setLoading(true);
    try {
      const res = await axios.get(
        `${API_URL}/renovation/calendar/${projectId}/${year}/${month}`,
        { headers: { Authorization: `Bearer ${token}` } }
      );
      setCalendar(res.data);
    } catch (err) {
      console.error(err);
      setCalendar(null);
    }
    setLoading(false);
  };

  return (
    <div>
      <h3>–ì—Ä–∞—Ñ—ñ–∫</h3>
      <div>
        <input
          type="number"
          placeholder="ID –ø—Ä–æ—î–∫—Ç—É"
          value={projectId}
          onChange={(e) => setProjectId(e.target.value)}
        />
        <input
          type="number"
          placeholder="–†—ñ–∫"
          value={year}
          onChange={(e) => setYear(e.target.value)}
        />
        <input
          type="number"
          placeholder="–ú—ñ—Å—è—Ü—å"
          value={month}
          onChange={(e) => setMonth(e.target.value)}
        />
        <button onClick={fetchCalendar}>–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä</button>
      </div>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è...</p>
      ) : calendar ? (
        <pre>{JSON.stringify(calendar, null, 2)}</pre>
      ) : (
        <p>–ö–∞–ª–µ–Ω–¥–∞—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.</p>
      )}
    </div>
  );
};

// --- –ö–ª—ñ—î–Ω—Ç–∏ –¥–ª—è —Ä–µ–º–æ–Ω—Ç—É/–±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–∞ ---
const RenovationClients = ({ token }) => {
  const [clients, setClients] = useState([]);
  const [loading, setLoading] = useState(true);
  useEffect(() => {
    axios
      .get(`${API_URL}/renovation/clients/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setClients(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error(err);
        setLoading(false);
      });
  }, [token]);
  return (
    <div>
      <h3>–ö–ª—ñ—î–Ω—Ç–∏</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
      ) : clients.length ? (
        <ul>
          {clients.map((client) => (
            <li key={client.id}>
              {client.name} - {client.phone}
            </li>
          ))}
        </ul>
      ) : (
        <p>–ö–ª—ñ—î–Ω—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>
      )}
    </div>
  );
};


const CleaningAdmin = ({ token }) => {
  const [subView, setSubView] = useState('orders'); // orders, callbacks, requests, statistics, calendar, clients

  return (
    <div>
      <h2>–ö–ª—ñ–Ω—ñ–Ω–≥ üßπ</h2>
      <CleaningNavigation setSubView={setSubView} />
      {subView === 'orders' && <CleaningOrders token={token} />}
      {subView === 'callbacks' && <CleaningCallbacks token={token} />}
      {subView === 'requests' && <CleaningRequests token={token} />}
      {subView === 'statistics' && <CleaningStatistics token={token} />}
      {subView === 'calendar' && <CleaningCalendar token={token} />}
      {subView === 'clients' && <CleaningClients token={token} />}
    </div>
  );
};

const CleaningNavigation = ({ setSubView }) => (
  <div>
    <button onClick={() => setSubView('orders')}>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è</button>
    <button onClick={() => setSubView('callbacks')}>–ü—Ä–æ–¥–∑–≤—ñ–Ω</button>
    <button onClick={() => setSubView('requests')}>–ó–∞–ø–∏—Ç–∏</button>
    <button onClick={() => setSubView('statistics')}>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</button>
    <button onClick={() => setSubView('calendar')}>–ì—Ä–∞—Ñ—ñ–∫</button>
    <button onClick={() => setSubView('clients')}>–ö–ª—ñ—î–Ω—Ç–∏</button>
  </div>
);

// --- –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –∫–ª—ñ–Ω—ñ–Ω–≥—É ---
const CleaningOrders = ({ token }) => {
  const [orders, setOrders] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    axios
      .get(`${API_URL}/cleaning/orders/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setOrders(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å:", err);
        setLoading(false);
      });
  }, [token]);

  return (
    <div>
      <h3>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –∫–ª—ñ–Ω—ñ–Ω–≥—É</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å...</p>
      ) : orders.length ? (
        <ul>
          {orders.map((order) => (
            <li key={order.id}>
              ID {order.id}: {order.address} ‚Äì {order.status}
            </li>
          ))}
        </ul>
      ) : (
        <p>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>
      )}
    </div>
  );
};

// --- –ü—Ä–æ–¥–∑–≤—ñ–Ω –¥–ª—è –∫–ª—ñ–Ω—ñ–Ω–≥—É ---
const CleaningCallbacks = ({ token }) => {
  const [phone, setPhone] = useState('');
  const [message, setMessage] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await axios.post(
        `${API_URL}/cleaning/callbacks/`,
        { phone },
        { headers: { Authorization: `Bearer ${token}` } }
      );
      if (res.status === 200 || res.status === 201) {
        setMessage(`–ó–∞–ø–∏—Ç –Ω–∞ –ø—Ä–æ–¥–∑–≤—ñ–Ω –¥–ª—è –Ω–æ–º–µ—Ä–∞ ${phone} –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!`);
      } else {
        setMessage("–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—É.");
      }
    } catch (err) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–æ–¥–∑–≤–æ–Ω—É:", err);
      setMessage("–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞.");
    }
  };

  return (
    <div>
      <h3>–ü—Ä–æ–¥–∑–≤—ñ–Ω –¥–ª—è –∫–ª—ñ–Ω—ñ–Ω–≥—É</h3>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É"
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
          required
        />
        <button type="submit">–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏</button>
      </form>
      {message && <p>{message}</p>}
    </div>
  );
};

// --- –ó–∞–ø–∏—Ç–∏ –¥–ª—è –∫–ª—ñ–Ω—ñ–Ω–≥—É ---
const CleaningRequests = ({ token }) => {
  const [requests, setRequests] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    axios
      .get(`${API_URL}/cleaning/requests/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setRequests(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤:", err);
        setLoading(false);
      });
  }, [token]);

  return (
    <div>
      <h3>–ó–∞–ø–∏—Ç–∏ –¥–ª—è –∫–ª—ñ–Ω—ñ–Ω–≥—É</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤...</p>
      ) : requests.length ? (
        <ul>
          {requests.map((req) => (
            <li key={req.id}>
              ID {req.id}: {req.message}
            </li>
          ))}
        </ul>
      ) : (
        <p>–ó–∞–ø–∏—Ç–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ.</p>
      )}
    </div>
  );
};

// --- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∫–ª—ñ–Ω—ñ–Ω–≥—É ---
const CleaningStatistics = ({ token }) => {
  const [stats, setStats] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    axios
      .get(`${API_URL}/cleaning/statistics/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setStats(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", err);
        setLoading(false);
      });
  }, [token]);

  return (
    <div>
      <h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∫–ª—ñ–Ω—ñ–Ω–≥—É</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</p>
      ) : stats ? (
        <div>
          <p>–ü—Ä–∏–±—É—Ç–æ–∫: {stats.profit}</p>
          <p>–ó–∞–º–æ–≤–ª–µ–Ω—å: {stats.orders_count}</p>
          <p>–Ü–Ω—à–µ: {stats.others}</p>
        </div>
      ) : (
        <p>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞.</p>
      )}
    </div>
  );
};

// --- –ì—Ä–∞—Ñ—ñ–∫ –¥–ª—è –∫–ª—ñ–Ω—ñ–Ω–≥—É ---
const CleaningCalendar = ({ token }) => {
  const [calendar, setCalendar] = useState(null);
  const [orderId, setOrderId] = useState('');
  const [year, setYear] = useState('');
  const [month, setMonth] = useState('');
  const [loading, setLoading] = useState(false);

  const fetchCalendar = async () => {
    setLoading(true);
    try {
      const res = await axios.get(
        `${API_URL}/cleaning/calendar/${orderId}/${year}/${month}`,
        { headers: { Authorization: `Bearer ${token}` } }
      );
      setCalendar(res.data);
    } catch (err) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è:", err);
      setCalendar(null);
    }
    setLoading(false);
  };

  return (
    <div>
      <h3>–ì—Ä–∞—Ñ—ñ–∫ –¥–ª—è –∫–ª—ñ–Ω—ñ–Ω–≥—É</h3>
      <div>
        <input
          type="number"
          placeholder="ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"
          value={orderId}
          onChange={(e) => setOrderId(e.target.value)}
        />
        <input
          type="number"
          placeholder="–†—ñ–∫"
          value={year}
          onChange={(e) => setYear(e.target.value)}
        />
        <input
          type="number"
          placeholder="–ú—ñ—Å—è—Ü—å"
          value={month}
          onChange={(e) => setMonth(e.target.value)}
        />
        <button onClick={fetchCalendar}>–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä</button>
      </div>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è...</p>
      ) : calendar ? (
        <pre>{JSON.stringify(calendar, null, 2)}</pre>
      ) : (
        <p>–ö–∞–ª–µ–Ω–¥–∞—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π.</p>
      )}
    </div>
  );
};

// --- –ö–ª—ñ—î–Ω—Ç–∏ –¥–ª—è –∫–ª—ñ–Ω—ñ–Ω–≥—É ---
const CleaningClients = ({ token }) => {
  const [clients, setClients] = useState([]);
  const [loading, setLoading] = useState(true);
  useEffect(() => {
    axios
      .get(`${API_URL}/cleaning/clients/`, {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setClients(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤:", err);
        setLoading(false);
      });
  }, [token]);

  return (
    <div>
      <h3>–ö–ª—ñ—î–Ω—Ç–∏ –¥–ª—è –∫–ª—ñ–Ω—ñ–Ω–≥—É</h3>
      {loading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
      ) : clients.length ? (
        <ul>
          {clients.map((client) => (
            <li key={client.id}>
              {client.name} - {client.phone}
            </li>
          ))}
        </ul>
      ) : (
        <p>–ö–ª—ñ—î–Ω—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>
      )}
    </div>
  );
};



// --- Statistics Display Component ---
const StatisticsDisplay = ({ stats }) => (
  <div>
    <h3>Statistics</h3>
    {stats ? (
      <div>
        <p>Profit: {stats.profit}</p>
      </div>
    ) : (
      <p>No statistics available.</p>
    )}
  </div>
);

// --- Documents Component ---
const Documents = () => (
  <div>
    <h3>Documents</h3>
    <p>This is where you would display documents.</p>
  </div>
);

// --- Settings Component ---
const Settings = () => (
  <div>
    <h3>Settings</h3>
    <p>This is where settings options would be available.</p>
  </div>
);

// --- Schedule Component ---
const Schedule = () => (
  <div className="card">
    <h3>Schedule</h3>
    <p>This is where you can manage scheduling (reviews, signings, appointments).</p>
    <form>
      <div>
        <label>Date and Time:</label>
        <input type="datetime-local" />
      </div>
      <div>
        <label>Location:</label>
        <input type="text" placeholder="Enter location" />
      </div>
      <div>
        <label>Event Type:</label>
        <select>
          <option value="review">Review</option>
          <option value="signing">Signing</option>
          <option value="appointment">Appointment</option>
        </select>
      </div>
      <div>
        <label>Notes:</label>
        <textarea placeholder="Enter notes" />
      </div>
      <button type="submit" className="advanced">Schedule</button>
    </form>
  </div>
);

// --- Reviews and Deals Component ---
const ReviewsAndDeals = () => (
  <div className="card">
    <h3>Reviews and Deals</h3>
    <p>This view would list reviews and deals with options to update them.</p>
    <table className="reviews-table">
      <thead>
        <tr>
          <th>ID</th>
          <th>Review</th>
          <th>Deal Status</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>101</td>
          <td>Great property!</td>
          <td>Completed</td>
          <td>
            <button>Edit</button>
            <button>Delete</button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
);

// --- Call Component ---
const Call = () => (
  <div className="card">
    <h3>Call</h3>
    <p>This view would allow you to create and manage call reminders.</p>
    <form>
      <div>
        <label>Order ID:</label>
        <input type="number" placeholder="Enter order id" />
      </div>
      <div>
        <label>Date & Time:</label>
        <input type="datetime-local" />
      </div>
      <div>
        <label>Note:</label>
        <textarea placeholder="Enter note" />
      </div>
      <button type="submit" className="advanced">Set Reminder</button>
    </form>
  </div>
);

export default App;
